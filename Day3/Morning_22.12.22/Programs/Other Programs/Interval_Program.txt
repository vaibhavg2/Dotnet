class Interval
{
    //read-only property, can only be set in the constructor
    public int Minutes { get; }

    public int Seconds { get; }

    public Interval(int min, int sec)
    {
        Minutes = min + sec / 60;
        Seconds = sec % 60;
    }

    public int Time()
    {
        return 60 * Minutes + Seconds;
    }

    //overloading addition operator so that expression x+y
    //for Interval x, y  is evaluated using 
    //Interval.operator+(x, y)

    public static Interval operator+(Interval x, Interval y)
    {
        return new Interval(x.Minutes + y.Minutes, x.Seconds + y.Seconds);
    }

    public override string ToString()
    {
        if(Seconds < 10)
            return Minutes + ":0" + Seconds;
        return Minutes + ":" + Seconds;
    }

    public override int GetHashCode()
    {
        return Minutes + Seconds;
    }

    public override bool Equals(object other)
    {
        if(other is Interval that)
        {
            //Interval that = (Interval)other;
            return (this.Minutes == that.Minutes) && (this.Seconds == that.Seconds);
        }
        return false;
    }
}